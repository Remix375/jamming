{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Track/Track.js","components/Tracklist/Tracklist.js","components/SearchResults/SearchResults.js","components/Playlist/Playlist.js","util/Spotify.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","search","changeSearch","bind","e","this","setState","target","value","onSearch","className","placeholder","onChange","onClick","React","Component","Track","renderAction","addTrack","removeTrack","onAdd","track","onRemove","isRemoval","src","image","name","artist","album","Tracklist","searchResults","map","id","SearchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistName","playlistTracks","onSave","userAccesToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expireDateMatch","expiresIn","Number","history","pushState","setTimeout","searchTerm","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","artists","images","url","uri","savePlaylist","trackArray","length","token","console","log","userId","method","body","JSON","stringify","playlistID","App","updatePlaylistName","unique","forEach","song","push","newPlaylistTrack","trackURIs","songs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.333375eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            search: \"\"\r\n        }\r\n\r\n        this.changeSearch = this.changeSearch.bind(this);\r\n        this.search = this.search.bind(this);\r\n    }\r\n\r\n    changeSearch(e) {\r\n        this.setState({\r\n            search: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    search() {\r\n        this.props.onSearch(this.state.search)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.changeSearch}/>\r\n                <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar","import React from \"react\";\r\nimport \"./Track.css\";\r\n\r\n\r\nclass Track extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n\r\n        this.renderAction = this.renderAction.bind(this)\r\n        this.addTrack = this.addTrack.bind(this)\r\n        this.removeTrack = this.removeTrack.bind(this)\r\n    }\r\n\r\n\r\n    addTrack() {\r\n        this.props.onAdd(this.props.track)\r\n    }\r\n\r\n    removeTrack() {\r\n        this.props.onRemove(this.props.track)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    renderAction() {\r\n        if (this.props.isRemoval) {\r\n            return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\r\n        } else {\r\n            return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let track = this.props.track;\r\n        return (\r\n            <div className=\"Track\">\r\n                <img src={track.image}></img>\r\n                <div className=\"Track-information\">\r\n                    \r\n                    <h3>{track.name}</h3>\r\n                    <p> {track.artist} {track.album}</p>\r\n                </div>\r\n                {this.renderAction()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Track","import React from \"react\";\r\nimport Track from \"../Track/Track.js\"\r\nimport \"./Tracklist.css\"\r\n\r\n\r\nclass Tracklist extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"TrackList\">\r\n                <h1> \r\n                    {this.props.searchResults.map(track => {\r\n                        return <Track key={track.id} track={track} onAdd={this.props.onAdd} onRemove={this.props.onRemove} isRemoval={this.props.isRemoval}/>\r\n                    }) \r\n                    }\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tracklist;","import React from \"react\";\r\nimport \"./SearchResults.css\";\r\nimport Tracklist from \"../Tracklist/Tracklist.js\"\r\n\r\nclass SearchResults extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <h2>Results</h2>\r\n                <Tracklist searchResults={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchResults;","import React from \"react\";\r\nimport \"./Playlist.css\"\r\nimport TrackList from \"../Tracklist/Tracklist.js\";\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n    }\r\n\r\n\r\n\r\n    handleNameChange(e) {\r\n        this.props.onNameChange(e.target.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Playlist\">\r\n                <input defaultValue={this.props.playlistName} onChange={this.handleNameChange}/>\r\n                <TrackList searchResults={this.props.playlistTracks} isRemoval={true} onRemove={this.props.onRemove}/>\r\n                <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Playlist;","let userAccesToken = \"\";\r\nconst clientID = \"c57610603fbc4ba0aa2597610c122d82\";\r\nconst redirectURI = \"http://localhost:3000/\";\r\n\r\n\r\n\r\n\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if (userAccesToken) {\r\n            return userAccesToken;\r\n        }\r\n\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/)\r\n        const expireDateMatch = window.location.href.match(/expires_in=([^&]*)/)\r\n\r\n\r\n\r\n        if (accessTokenMatch && expireDateMatch) {\r\n            userAccesToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expireDateMatch[1])\r\n\r\n            window.history.pushState('Access Token', null, '/');\r\n            window.setTimeout(() => userAccesToken = '', expiresIn * 1000);\r\n        } else {\r\n            window.location = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n    search(searchTerm) {\r\n        this.getAccessToken()\r\n        if (!searchTerm) {\r\n            return\r\n        }\r\n        let value = fetch(`https://api.spotify.com/v1/search?type=track&q=${searchTerm}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userAccesToken}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            let Response = jsonResponse.tracks.items.map(track => {\r\n                return {\r\n                    id: track.id,\r\n                    name: track.name,\r\n                    artist: track.artists[0].name,\r\n                    album: track.album.name,\r\n                    image: track.album.images[0].url,\r\n                    uri: track.uri\r\n                }\r\n            })\r\n            return Response;\r\n        })\r\n        return value\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n    savePlaylist(name, trackArray) {\r\n        this.getAccessToken()\r\n\r\n        if (!name || !trackArray.length) {\r\n            return\r\n        }\r\n\r\n\r\n        let token = userAccesToken;\r\n        console.log(token)\r\n        const headers = {Authorization: `Bearer ${token}`}\r\n        let userId;\r\n        \r\n\r\n\r\n        return fetch(`https://api.spotify.com/v1/me`, {\r\n            headers: headers\r\n        })\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            userId = jsonResponse.id\r\n            console.log(userId, \"id\")\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ name: name })\r\n            })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse, \"resp\")\r\n                const playlistID = jsonResponse.id\r\n                return fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\"uris\": trackArray})\r\n                })\r\n            })\r\n\r\n\r\n        })\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nSpotify.getAccessToken()\r\n\r\nexport default Spotify;","import React from \"react\"\nimport './App.css';\n\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\"\n\nimport Spotify from \"../../util/Spotify\"\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchResults: [],\n\n      playlistName: \"Playlist Name\",\n\n      playlistTracks: []\n    }\n\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n\n    this.savePlaylist = this.savePlaylist.bind(this)\n    this.search = this.search.bind(this);\n\n  }\n\n\n\n  addTrack(track) {\n    let playlistTracks = this.state.playlistTracks;\n    let unique = true;\n\n\n    playlistTracks.forEach(song => {\n      if (song.id === track.id) {\n        unique = false\n      }\n    });\n\n\n    if(unique) {\n      playlistTracks.push(track)\n\n      this.setState({\n        playlistTracks\n      })\n    }\n  }\n\n\n\n\n\n\n  removeTrack(track) {\n    let playlistTracks = this.state.playlistTracks;\n    \n    let newPlaylistTrack = [];\n\n\n    playlistTracks.forEach(song => {\n      if (song.id !== track.id) {\n        newPlaylistTrack.push(song)\n      }\n    });\n\n    this.setState({\n      playlistTracks: newPlaylistTrack\n    })\n  }\n\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    })\n  }\n\n\n\n\n\n  savePlaylist() {\n    let trackURIs = []\n\n    this.state.playlistTracks.forEach(track => {\n      trackURIs.push(track.uri)\n    })\n\n    Spotify.savePlaylist(this.state.playlistName, trackURIs)\n\n\n    this.setState({\n      playlistTracks: [],\n      playlistName: \"New Playlist\"\n    })\n  }\n\n\n  search(searchTerm) {\n    Spotify.search(searchTerm)\n    .then(songs => {\n      this.setState({\n        searchResults: songs\n      })\n    })\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar \n            onSearch={this.search}\n          />\n          <div className=\"App-playlist\">\n\n            <SearchResults \n              searchResults={this.state.searchResults} \n              onAdd={this.addTrack}\n              />\n\n\n            <Playlist \n              playlistName={this.state.playlistName} \n              playlistTracks={this.state.playlistTracks} \n              onRemove={this.removeTrack} \n              onNameChange={this.updatePlaylistName} \n              onSave={this.savePlaylist}\n            />\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}